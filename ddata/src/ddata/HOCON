akka {
  actor {
    provider=cluster
    serialization-bindings {
      "System.Object"=hyperion
    }
    serialization-identifiers {
      "Akka.Cluster.Serialization.ClusterMessageSerializer, Akka.Cluster"=5
    }
    serializers {
      akka-cluster="Akka.Cluster.Serialization.ClusterMessageSerializer, Akka.Cluster"
      hyperion="Akka.Serialization.HyperionSerializer, Akka.Serialization.Hyperion"
    }
  }
  serialize-messages = on
  cluster {
    distributed-data {
      pruning-marker-time-to-live = "30 s"
      durable {
        pruning-marker-time-to-live = "60 s"
        lmdb {
          dir="cluster-data/cluster"
          map-size = "100 MiB"
          write-behind-interval="200 ms"
        }
        store-actor-class="Akka.DistributedData.LightningDB.LmdbDurableStore, Akka.DistributedData.LightningDB"
      }
      role=ddata
    }
    roles=[
      ddata
    ]
    seed-nodes=[]
  }
  coordinated-shutdown {
    exit-clr=on
  }
  extensions=[
    "Akka.DistributedData.DistributedDataProvider, Akka.DistributedData"
  ]
  loglevel = INFO
  stdout-loglevel = INFO
  test {
    timefactor=10
  }

  remote {
    dot-netty {
      tcp {
        maximum-frame-size="350000b"
        message-frame-size="300000b"
        port=4256
        receive-buffer-size="300000b"
        send-buffer-size="300000b"
        hostname = "0.0.0.0"
      }
    }
    log-sent-messages=on
    maximum-payload-bytes="350000 bytes"
  }
}
